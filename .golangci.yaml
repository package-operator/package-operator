linters:
  disable-all: true
  # One can't use disable and disable-all. disable-all is preferred to avoid lint failing when golangci gets updated and linters are added.
  # at the same time but it is nice to explicitly state which linters we do not want.
  #disable:
  #- containedctx     # Context.Context within a struct a struct (as opposed to a func parameter) is nasty for many reasons, but actually sometimes useful.
  #- contextcheck     # Not that useful/false positives.
  #- cyclop           # Cyclo complexity already calculated by other linters.
  #- depguard         # We do not restrict imports.
  #- dogsled          # Could be nice in the future.
  #- dupl             # Could be nice in the future.
  #- exhaustive       # Not that useful/false positives.
  #- exhaustruct      # Not that useful/false positives.
  #- forcetypeassert  # We want a panic in situations when a type is asserted.
  #- funlen           # We really like long functions.
  #- gci              # Conflicts with other linters.
  #- gochecknoglobals # We need globals.
  #- gochecknoinits   # We have a lot of those.
  #- gocognit         # Not that useful/false positives.
  #- godox            # Not that useful/false positives.
  #- gomnd            # The annoy is strong.
  #- gomoddirectives  # Not that useful/false positives.
  #- interfacebloat   # WE do bloaty interfaces.
  #- inamedparam      # Not that useful.
  #- ireturn          # Not that useful/false positives.
  #- lll              # Could be nice in the future.
  #- musttag          # Dislikes our deps.
  #- nakedret         # Naked return good return.
  #- nlreturn         # Could be nice in the future.
  #- nonamedreturns   # Named return good return.
  #- rowserrcheck     # No SQL here.
  #- sqlclosecheck    # No SQL here.
  #- tagliatelle      # Reports issues that are not right for us.
  #- testpackage      # Could be nice in the future.
  #- unparam          # Not that useful/false positives.
  #- varnamelen       # Not that useful/false positives.
  #- wrapcheck        # Not that useful/false positives.
  #- wsl              # Not that useful/false positives.
  #- zerologlint      # No zerolog here.
  enable:
  - asasalint
  - asciicheck
  - bidichk
  - bodyclose
  - decorder
  - dupword
  - durationcheck
  - errcheck
  - errchkjson
  - errname
  - errorlint
  - execinquery
  - exportloopref
  - forbidigo
  - ginkgolinter
  - gocheckcompilerdirectives
  - gochecksumtype
  - goconst
  - gocritic
  - gocyclo
  - godot
  - goerr113
  - gofmt
  - gofumpt
  - goheader
  - goimports
  - gosmopolitan
  - govet
  - grouper
  - importas
  - ineffassign
  - loggercheck
  - maintidx
  - makezero
  - mirror
  - misspell
  - musttag
  - nestif
  - nilerr
  - nilnil
  - noctx
  - nolintlint
  - nosprintfhostport
  - paralleltest
  - perfsprint
  - prealloc
  - predeclared
  - promlinter
  - protogetter
  - reassign
  - revive
  - rowserrcheck
  - sloglint
  - staticcheck
  - stylecheck
  - tagalign
  - tenv
  - testableexamples
  - testifylint
  - thelper
  - tparallel
  - typecheck
  - unconvert
  - unused
  - usestdlibvars
  - wastedassign
  - whitespace
issues:
  max-same-issues: 0
  max-issues-per-linter: 0
  exclude-rules:
    # Integration tests MUST NOT run in parallel.
    - path: 'integration\/.+\.go'
      linters:
      - paralleltest
run:
  skip-files: [ "zz_generated.deepcopy.go$" ]
linters-settings:
  goimports:
    local-prefixes: package-operator.run
  gosec:
    excludes:
    - G301 # Poor file permissions used when creating a directory.
    - G302 # Poor file permissions used with chmod.
    - G306 # Poor file permissions used when writing to a new file.
    - G601 # Taking address of loop variable - not relevant anymore.
    - G602 # Should reports out of bound access but is broken.
  importas:
    no-unaliased: false
    no-extra-aliases: true
    alias:
    - pkg: k8s\.io\/api\/([^\/]+)\/([^\/]+)
      alias: $1$2
    - pkg: k8s\.io\/apimachinery\/pkg\/([^\/]+)
      alias: $1
    - pkg: k8s\.io\/apimachinery\/pkg\/apis\/([^\/]+)\/([^\/]+)
      alias: $1$2
    - pkg: package-operator\.run\/apis
      alias: apis
    - pkg: package-operator\.run\/apis\/([^\/]+)\/([^\/]+)
      alias: $1$2
    - pkg: k8s\.io\/apiextensions-apiserver\/pkg\/apis\/([^\/]+)\/([^\/]+)
      alias: $1$2
    - pkg: github\.com\/openshift\/api\/([^\/]+)\/([^\/]+)
      alias: $1$2
    - pkg: package-operator.run/internal/controllers/hostedclusters/([^\/]+)\/([^\/]+)
      alias: $1$2
    - pkg: k8s\.io\/apimachinery\/pkg\/api\/([^\/]+)
      alias: apimachinery$1
    - pkg: sigs\.k8s\.io\/controller-runtime
      alias: ctrl
    - pkg: package-operator\.run\/internal\/cmd
      alias: internalcmd
    - pkg: package-operator\.run\/internal\/probing
      alias: internalprobing
    - pkg: package-operator\.run\/internal\/controllers\/packages
      alias: controllerspackages
    - pkg: github\.com\/google\/go-containerregistry\/pkg\/v1
      alias: containerregistrypkgv1
    - pkg: k8s\.io\/utils\/clock\/testing
      alias: clocktesting
    - pkg: k8s\.io\/apiserver\/pkg\/cel
      alias: apiservercel
    - pkg: k8s\.io\/apiserver\/pkg\/apis\/cel
      alias: apiserverapiscel
