name: Testing

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches: [main]

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  update-go-modules:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.22'
          cache-dependency-path: "**/*.sum"
          check-latest: true

      - name: Detect Go modules
        id: detect_modules
        run: |
          echo "Finding all Go modules..."
          MODULES=$(find . -mindepth 2 -name "go.mod" | sort | xargs -n1 dirname)
          MODULES=$(echo "$MODULES" | tr '\n' ' ')  # Convert newlines to spaces
          MODULES=". $MODULES"
          echo "Detected modules: $MODULES"
          echo "MODULES=$MODULES" >> $GITHUB_ENV

      - name: Run go mod tidy for all modules
        run: |
          UPDATE=""
          for module in $MODULES; do
            echo "Processing module: $module"
            pushd "$module" || exit 1
            go mod tidy
            if ! git diff --quiet; then
              echo "Detected changes in $module"
              UPDATE="$UPDATE $module"
              git add go.mod go.sum
            fi
            popd
          done
          echo "UPDATE=$UPDATE" >> $GITHUB_ENV

      - name: Run go work sync
        if: env.UPDATE != ''
        run: go work sync

      - name: Commit and push changes
        if: env.UPDATE != ''
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "fix: sync dependencies with go mod tidy / go work sync" || echo "No changes to commit"
          git push origin HEAD:${{ github.head_ref }}

  lint-unit-int:
    needs: [ update-go-modules ]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'
        cache-dependency-path: "**/*.sum"
        check-latest: true

    - name: Ensure code is sanitized
      run: ./do CI:PostPush

    - name: Unit
      run: ./do CI:Unit

    - name: Integration tests
      run: ./do CI:Integration
      env:
        CARDBOARD_CONTAINER_RUNTIME: docker

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: .cache/unit/cover.txt,.cache/integration/cover.txt
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: ${{ github.event_name != 'pull_request' }}
        verbose: true

    - name: Archive unit test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: unit-test-results
        path: .cache/unit

    - name: Archive integration test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: integration-test-results
        path: .cache/integration
