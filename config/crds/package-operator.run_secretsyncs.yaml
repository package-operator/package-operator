---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: secretsyncs.package-operator.run
spec:
  group: package-operator.run
  names:
    kind: SecretSync
    listKind: SecretSyncList
    plural: secretsyncs
    shortNames:
    - ssync
    singular: secretsync
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretSync synchronizes a singular secret into multiple destinations.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SecretSyncSpec contains the desired config if an SecretSync.
            properties:
              dest:
                items:
                  description: NamespacedName container.
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              paused:
                description: |-
                  Disables reconciliation of the SecretSync.
                  Only Status updates will still be reported, but object changes will not be reconciled.
                type: boolean
              src:
                description: NamespacedName container.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              strategy:
                default:
                  watch: {}
                description: |-
                  SecretSyncStrategy configures which strategy is used for synchronization. Exactly one strategy must be configured at any given time.
                  Defaults to the `Watch` strategy if not specified.
                properties:
                  poll:
                    description: The `Poll` strategy synchronizes source and destinations
                      in regular intervals which can be configured.
                    properties:
                      interval:
                        description: |-
                          Specifies the poll interval as a string which can be parsed to a time.Duration
                          by [time.ParseDuration](https://pkg.go.dev/time#ParseDuration).
                        type: string
                    required:
                    - interval
                    type: object
                  watch:
                    description: |-
                      The `Watch` strategy watches the source object for changes and queues re-synchronization whenever a the manager observes a write to a source.
                      Caution: package-operator will add a label to the source object to make it visible to its in-memory caches which can lead to a write cascade on the object
                      if it is managed by a controller that insists on owning the full shape of the object. You can use the `Poll` strategy instead if you observe this happening,
                      and have reasons not to change the behaviour of the controller in question.
                    type: object
                type: object
                x-kubernetes-validations:
                - message: exactly one strategy is must be configured
                  rule: (has(self.poll) && !has(self.watch)) || (!has(self.poll) &&
                    has(self.watch))
            required:
            - dest
            - src
            - strategy
            type: object
          status:
            default:
              phase: Pending
            description: SecretSyncStatus contains the observed state of a SecretSync.
            properties:
              conditions:
                description: Conditions is a list of status conditions ths object
                  is in.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              controllerOf:
                description: |-
                  TODO: maybe include last sync timestamp
                  References all objects controlled by this instance.
                items:
                  description: NamespacedName container.
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              phase:
                description: |-
                  Phase is not part of any API contract
                  it will go away as soon as kubectl can print conditions!
                  When evaluating object state in code, use .Conditions instead.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
