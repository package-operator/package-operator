apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    package-operator.run/phase: deploy
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: package-operator-remote-phase-manager
  name: package-operator-remote-phase-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: package-operator-remote-phase-manager
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: package-operator-remote-phase-manager
        hypershift.openshift.io/need-management-kas-access: "true"
    spec:
      affinity: {"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"node-role.kubernetes.io/infra","operator":"Exists"}]}]}}}
      tolerations: [{"effect":"NoSchedule","key":"node-role.kubernetes.io/infra"}]
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - args:
        - --enable-leader-election
        - -target-cluster-kubeconfig-file=/data/kubeconfig
        - -class=hosted-cluster
        env:
        - name: PKO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.package-operator.run/static-image
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        name: manager
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: kubeconfig
          readOnly: true
      serviceAccountName: package-operator-remote-phase-manager
      volumes:
      - name: kubeconfig
        secret:
          optional: false
          secretName: service-network-admin-kubeconfig
status: {}
