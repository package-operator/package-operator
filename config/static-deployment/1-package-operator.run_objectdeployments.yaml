---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: objectdeployments.package-operator.run
spec:
  group: package-operator.run
  names:
    kind: ObjectDeployment
    listKind: ObjectDeploymentList
    plural: objectdeployments
    shortNames:
    - objdeploy
    - od
    singular: objectdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ObjectDeployment is the Schema for the ObjectDeployments API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ObjectDeploymentSpec defines the desired state of a ObjectDeployment.
            properties:
              revisionHistoryLimit:
                default: 10
                description: Number of old revisions in the form of archived ObjectSets
                  to keep.
                format: int32
                type: integer
              selector:
                description: Selector targets ObjectSets managed by this Deployment.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: Template to create new ObjectSets from.
                properties:
                  metadata:
                    description: Common Object Metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      finalizers:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                  spec:
                    description: ObjectSet specification.
                    properties:
                      availabilityProbes:
                        description: |-
                          Availability Probes check objects that are part of the package.
                          All probes need to succeed for a package to be considered Available.
                          Failing probes will prevent the reconciliation of objects in later phases.
                        items:
                          description: ObjectSetProbe define how ObjectSets check
                            their children for their status.
                          properties:
                            probes:
                              description: Probe configuration parameters.
                              items:
                                description: Probe defines probe parameters. Only
                                  one can be filled.
                                properties:
                                  cel:
                                    description: |-
                                      ProbeCELSpec uses Common Expression Language (CEL) to probe an object.
                                      CEL rules have to evaluate to a boolean to be valid.
                                      See:
                                      https://kubernetes.io/docs/reference/using-api/cel
                                      https://github.com/google/cel-go
                                    properties:
                                      message:
                                        description: Error message to output if rule
                                          evaluates to false.
                                        type: string
                                      rule:
                                        description: CEL rule to evaluate.
                                        type: string
                                    required:
                                    - message
                                    - rule
                                    type: object
                                  condition:
                                    description: ProbeConditionSpec checks whether
                                      or not the object reports a condition with given
                                      type and status.
                                    properties:
                                      status:
                                        default: "True"
                                        description: Condition status to probe for.
                                        type: string
                                      type:
                                        description: Condition type to probe for.
                                        type: string
                                    required:
                                    - status
                                    - type
                                    type: object
                                  fieldsEqual:
                                    description: ProbeFieldsEqualSpec compares two
                                      fields specified by JSON Paths.
                                    properties:
                                      fieldA:
                                        description: First field for comparison.
                                        type: string
                                      fieldB:
                                        description: Second field for comparison.
                                        type: string
                                    required:
                                    - fieldA
                                    - fieldB
                                    type: object
                                type: object
                              type: array
                            selector:
                              description: Selector specifies which objects this probe
                                should target.
                              properties:
                                kind:
                                  description: Kind and API Group of the object to
                                    probe.
                                  properties:
                                    group:
                                      description: Object Group to apply a probe to.
                                      type: string
                                    kind:
                                      description: Object Kind to apply a probe to.
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  type: object
                                selector:
                                  description: Further sub-selects objects based on
                                    a Label Selector.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - kind
                              type: object
                          required:
                          - probes
                          - selector
                          type: object
                        type: array
                      phases:
                        description: |-
                          Reconcile phase configuration for a ObjectSet.
                          Phases will be reconciled in order and the contained objects checked
                          against given probes before continuing with the next phase.
                        items:
                          description: ObjectSetTemplatePhase configures the reconcile
                            phase of ObjectSets.
                          properties:
                            class:
                              description: |-
                                If non empty, the ObjectSet controller will delegate phase reconciliation
                                to another controller, by creating an ObjectSetPhase object. If set to the
                                string "default" the built-in Package Operator ObjectSetPhase controller
                                will reconcile the object in the same way the ObjectSet would. If set to
                                any other string, an out-of-tree controller needs to be present to handle
                                ObjectSetPhase objects.
                              type: string
                            externalObjects:
                              description: ExternalObjects observed, but not reconciled
                                by this phase.
                              items:
                                description: ObjectSetObject is an object that is
                                  part of the phase of an ObjectSet.
                                properties:
                                  conditionMappings:
                                    description: Maps conditions from this object
                                      into the Package Operator APIs.
                                    items:
                                      description: ConditionMapping maps one condition
                                        type to another.
                                      properties:
                                        destinationType:
                                          description: Destination condition type
                                            to report into Package Operator APIs.
                                          pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]'
                                          type: string
                                        sourceType:
                                          description: Source condition type.
                                          type: string
                                      required:
                                      - destinationType
                                      - sourceType
                                      type: object
                                    type: array
                                  object:
                                    type: object
                                    x-kubernetes-embedded-resource: true
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                - object
                                type: object
                              type: array
                            name:
                              description: Name of the reconcile phase. Must be unique
                                within a ObjectSet.
                              type: string
                            objects:
                              description: Objects belonging to this phase.
                              items:
                                description: ObjectSetObject is an object that is
                                  part of the phase of an ObjectSet.
                                properties:
                                  conditionMappings:
                                    description: Maps conditions from this object
                                      into the Package Operator APIs.
                                    items:
                                      description: ConditionMapping maps one condition
                                        type to another.
                                      properties:
                                        destinationType:
                                          description: Destination condition type
                                            to report into Package Operator APIs.
                                          pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]'
                                          type: string
                                        sourceType:
                                          description: Source condition type.
                                          type: string
                                      required:
                                      - destinationType
                                      - sourceType
                                      type: object
                                    type: array
                                  object:
                                    type: object
                                    x-kubernetes-embedded-resource: true
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                - object
                                type: object
                              type: array
                            slices:
                              description: References to ObjectSlices containing objects
                                for this phase.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                      successDelaySeconds:
                        description: |-
                          Success Delay Seconds applies a wait period from the time an
                          Object Set is available to the time it is marked as successful.
                          This can be used to prevent false reporting of success when
                          the underlying objects may initially satisfy the availability
                          probes, but are ultimately unstable.
                        format: int32
                        type: integer
                    type: object
                required:
                - metadata
                - spec
                type: object
            required:
            - selector
            - template
            type: object
          status:
            default:
              phase: Pending
            description: ObjectDeploymentStatus defines the observed state of a ObjectDeployment.
            properties:
              collisionCount:
                description: Count of hash collisions of the ObjectDeployment.
                format: int32
                type: integer
              conditions:
                description: Conditions is a list of status conditions ths object
                  is in.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: |-
                  This field is not part of any API contract
                  it will go away as soon as kubectl can print conditions!
                  When evaluating object state in code, use .Conditions instead.
                type: string
              revision:
                description: Deployment revision.
                format: int64
                type: integer
              templateHash:
                description: Computed TemplateHash.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
